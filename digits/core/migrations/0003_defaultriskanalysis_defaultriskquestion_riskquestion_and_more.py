# Generated by Django 4.2.5 on 2023-10-01 16:23

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

risk_questions = [
    {
        'category': 'ACI',
        'order': 1,
        'description': 'Trabalho em altura?'
    },
    {
        'category': 'ACI',
        'order': 2,
        'description': 'Trabalho com energia elétrica? Risco de choque elétrico?'
    },
    {
        'category': 'ACI',
        'order': 3,
        'description': 'Sistema energizado?'
    },
    {
        'category': 'ACI',
        'order': 4,
        'description': 'Sistema de aterramento?'
    },
    {
        'category': 'ACI',
        'order': 5,
        'description': ' Trabalho em espaço confinado? Medição de gases?'
    },
    {
        'category': 'ACI',
        'order': 6,
        'description': 'Trabalho com solda? Que tipo?'
    },
    {
        'category': 'ACI',
        'order': 7,
        'description': 'Trabalho de corte a quente ou lixadeira?'
    },
    {
        'category': 'ACI',
        'order': 8,
        'description': 'Máquinas e equipamentos com partes móveis ou cortantes?'
    },
    {
        'category': 'ACI',
        'order': 9,
        'description': 'Trabalho com ferramentas manuais?'
    },
    {
        'category': 'ACI',
        'order': 10,
        'description': 'Trabalho com empilhadeiras ou carrinhos elétricos?'
    },
    {
        'category': 'ACI',
        'order': 11,
        'description': 'Utilização de produtos químicos perigosos?'
    },
    {
        'category': 'ACI',
        'order': 12,
        'description': 'Trabalho com vidros ou com objetos perfuro cortantes?'
    },
    {
        'category': 'ACI',
        'order': 13,
        'description': 'Utilização de EPIs? Quais??'
    },
    {
        'category': 'ACI',
        'order': 14,
        'description': 'Observações?'
    },
    {
        'category': 'BIO',
        'order': 1,
        'description': 'Trabalho com seringas ou objetos perfuro cortantes?'
    },
    {
        'category': 'BIO',
        'order': 2,
        'description': 'Trabalho com fungos, bactérias, microorganismos ou vírus?'
    },
    {
        'category': 'BIO',
        'order': 3,
        'description': 'Existe algum outro risco de contaminação biológica?'
    },
    {
        'category': 'BIO',
        'order': 4,
        'description': 'Observações?'
    },
    {
        'category': 'FIS',
        'order': 1,
        'description': 'Ruído?'
    },
    {
        'category': 'FIS',
        'order': 2,
        'description': 'Vibrações?'
    },
    {
        'category': 'FIS',
        'order': 3,
        'description': 'Radiações ionizantes?'
    },
    {
        'category': 'FIS',
        'order': 4,
        'description': 'Radiações não ionizantes?'
    },
    {
        'category': 'FIS',
        'order': 5,
        'description': 'Trabalho a céu aberto?'
    },
    {
        'category': 'FIS',
        'order': 6,
        'description': 'Frio?'
    },
    {
        'category': 'FIS',
        'order': 7,
        'description': 'Calor?'
    },
    {
        'category': 'FIS',
        'order': 8,
        'description': 'Umidade?'
    },
    {
        'category': 'FIS',
        'order': 9,
        'description': 'Observações?'
    },
    {
        'category': 'QUI',
        'order': 1,
        'description': 'Há presença de poeiras?'
    },
    {
        'category': 'QUI',
        'order': 2,
        'description': 'Há presença de fumos?'
    },
    {
        'category': 'QUI',
        'order': 3,
        'description': 'Há presença de névoas?'
    },
    {
        'category': 'QUI',
        'order': 4,
        'description': 'Há presença de neblinas?'
    },
    {
        'category': 'QUI',
        'order': 5,
        'description': 'Há presença de gases?'
    },
    {
        'category': 'QUI',
        'order': 6,
        'description': 'Há presença de vapores?'
    },
    {
        'category': 'QUI',
        'order': 7,
        'description': 'Observações?'
    },
]


def create_questions(apps, schema_editor):
    RiskQuestion = apps.get_model('core', 'RiskQuestion')
    for risk in risk_questions:
        question = RiskQuestion(
            category=risk['category'],
            order=risk['order'],
            description=risk['description'],
        )
        question.save()

    

def _create_questions(apps, schema_editor):
    pass


def create_default_risk_analysis(apps, schema_editor):
    DefaultRiskAnalysis = apps.get_model('core', 'DefaultRiskAnalysis')
    RiskQuestion = apps.get_model('core', 'RiskQuestion')
    DefaultRiskQuestion = apps.get_model('core', 'DefaultRiskQuestion')

    risk_analysis = DefaultRiskAnalysis(
        description='Análise Padrão'
    )
    risk_analysis.save()

    risk_questions = RiskQuestion.objects.all()
    for question in risk_questions:
        default_question = DefaultRiskQuestion(
            default_risk_analysis=risk_analysis,
            risk_question=question
        )
        default_question.save()
    

def _create_default_risk_analysis(apps, schema_editor):
    pass


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0002_preliminaryriskanalysis"),
    ]

    operations = [
        migrations.CreateModel(
            name="DefaultRiskAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.CharField(max_length=500, verbose_name="Descrição"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativa?")),
            ],
            options={
                "verbose_name": "Análise de Risco Padrão",
                "verbose_name_plural": "Análises de Risco Padrão",
            },
        ),
        migrations.CreateModel(
            name="DefaultRiskQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "default_risk_analysis",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.defaultriskanalysis",
                        verbose_name="Análise de Risco Padrão",
                    ),
                ),
            ],
            options={
                "verbose_name": "Questão da Análise de Risco Padrão",
                "verbose_name_plural": "Questões da Análise de Risco Padrão",
            },
        ),
        migrations.CreateModel(
            name="RiskQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(max_length=3, verbose_name="Categoria do Risco"),
                ),
                ("order", models.PositiveSmallIntegerField(verbose_name="Ordem")),
                (
                    "description",
                    models.CharField(max_length=500, verbose_name="Descrição"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativa?")),
            ],
            options={
                "verbose_name": "Questâo de Risco",
                "verbose_name_plural": "Questões de Risco",
            },
        ),
        migrations.AddField(
            model_name="preliminaryriskanalysis",
            name="activity_type",
            field=models.CharField(
                blank=True, max_length=500, verbose_name="Tipo de Atividade"
            ),
        ),
        migrations.AddField(
            model_name="preliminaryriskanalysis",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="created_risk_analysis",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Criado por",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="preliminaryriskanalysis",
            name="estimated_execution_time",
            field=models.CharField(
                blank=True, max_length=250, verbose_name="Tempo previsto de execução"
            ),
        ),
        migrations.AddField(
            model_name="preliminaryriskanalysis",
            name="last_update",
            field=models.DateTimeField(
                auto_now_add=True,
                default=django.utils.timezone.now,
                verbose_name="Última atualização",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="preliminaryriskanalysis",
            name="location",
            field=models.CharField(blank=True, max_length=500, verbose_name="Local"),
        ),
        migrations.AddField(
            model_name="preliminaryriskanalysis",
            name="status",
            field=models.CharField(
                choices=[
                    ("CAD", "Em cadastro"),
                    ("PRT", "Pronta para assinatura"),
                    ("VIG", "Vigente"),
                    ("CAN", "Cancelada"),
                ],
                default="CAD",
                max_length=3,
                verbose_name="Situação",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="preliminaryriskanalysis",
            name="updated_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="updated_risk_analysis",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Atualizado por",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="preliminaryriskanalysis",
            name="work_permission",
            field=models.CharField(
                blank=True,
                max_length=250,
                verbose_name="Permissão de trabalho / Acompanhamento de Técnico de Segurança do Trabalho da contratada",
            ),
        ),
        migrations.CreateModel(
            name="RiskAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "exists",
                    models.BooleanField(default=False, verbose_name="Presente?"),
                ),
                (
                    "details",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="Qual(is)?"
                    ),
                ),
                (
                    "form_of_control",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="Forma(s) de Controle"
                    ),
                ),
                (
                    "preliminary_risk_analysis",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="answers",
                        to="core.preliminaryriskanalysis",
                        verbose_name="Análise Preliminar de Risco",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.defaultriskquestion",
                        verbose_name="Questão",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RiskAnalysisSignature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "signature_type",
                    models.CharField(
                        choices=[
                            ("AVA", "Avaliador"),
                            ("RES", "Responsável pela Contratação"),
                        ],
                        max_length=3,
                        verbose_name="Tipo de assinatura",
                    ),
                ),
                (
                    "signature_date_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data de assinatura"
                    ),
                ),
                ("token", models.CharField(blank=True, max_length=64, null=True)),
                (
                    "preliminary_risk_analysis",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="signatures",
                        to="core.preliminaryriskanalysis",
                        verbose_name="Análise Preliminar de Risco",
                    ),
                ),
                (
                    "signatory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Assinatura da Análise de Risco",
                "verbose_name_plural": "Assinaturas da Análise de Risco",
            },
        ),
        migrations.AddField(
            model_name="defaultriskquestion",
            name="risk_question",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="core.riskquestion",
                verbose_name="Questão de Risco",
            ),
        ),
        migrations.RunPython(create_questions, _create_questions),
        migrations.RunPython(create_default_risk_analysis, _create_default_risk_analysis),
    ]
